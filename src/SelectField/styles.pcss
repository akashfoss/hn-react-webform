@import '../styles/_variables.pcss';

.select-wrapper {
  position: relative;
  width: calc(var(--inputWidth) + 20px);
  padding-right: 20px;

  @media (min-width: 768px) {
    width: calc(50% + var(--inputWidth) + 20px);
  }

  &.label-display-inline {
    width: calc(var(--inputWidth) + 20px);
    padding-right: 20px;

    @media (min-width: 768px) {
      display: inline-block;
    }

    & :global .Select-placeholder,
    & :global .Select--single > .Select-control .Select-value {
      max-width: calc(var(--inputWidth) - 25px);
    }
  }

  &.label-display-before {
    & :global .Select-placeholder,
    & :global .Select--single > .Select-control .Select-value {
      max-width: calc(100% - 25px);
      white-space: normal; /* since we're working with percentual width, we need the line to wrap */
    }

    & :global .Select--single > .Select-control .Select-value {
      height: calc((var(--spacingUnit) / 2) + var(--inputLineHeight));
    }
  }

  &.validate-error {
    & :global .Select-control {
      border-color: var(--errorColor);
      background-color: var(--errorBgColor);
    }

    & :global .Select-menu-outer {
      border-bottom-color: var(--errorColor);
      border-left-color: var(--errorColor);
      border-right-color: var(--errorColor);
    }

    & :global .Select-placeholder {
      color: var(--errorColor);
    }
  }
}

/* Validation icon */

.validation-icon {
  display: inline-block;
  width: calc(var(--spacingUnit) / 1.5);
  height: calc(var(--spacingUnit) / 1.5);
  margin-left: calc(var(--spacingUnit) / 1.5);
  top: 10px;
  right: 0;
  position: absolute;
}

.validate-success {
  &::after {
    content: '';
    display: block;
    width: 60%;
    height: 100%;
    border-bottom: 2px solid var(--successColor);
    border-right: 2px solid var(--successColor);
    transform: rotate(45deg) translateY(-4px);
    position: relative;
    top: -5px;
  }
}

:global .Select {
  display: inline-block;
  width: 100%;
}

:global .Select-control {
  color: inherit;
  border: 1px solid var(--borderColor);
  background-color: var(--inputBgColor);
  border-radius: var(--borderRadius);
  height: var(--inputLineHeight);
  line-height: var(--inputLineHeight);
  width: 100%;
  max-width: 100%;
  overflow: visible;
  margin: 0 0 calc(var(--spacingUnit) / 2);
}

:global .Select,
:global .Select div,
:global .Select input,
:global .Select span {
  line-height: calc(var(--inputLineHeight) + (var(--spacingUnit) / 2));
}

:global .is-focused:not(.is-open) > .Select-control {
  outline: none;
  box-shadow: 0 0 2px 3px var(--focusColor);
}

:global .Select-placeholder,
:global .Select--single > .Select-control .Select-value {
  padding: 0 calc(var(--spacingUnit) / 2);
  line-height: inherit;
  font-size: 0.9em;
  position: static;
}

:global .Select-input {
  height: inherit;
  position: absolute;
}

:global .Select-input > input {
  padding: 0;
}

:global .Select-placeholder {
  color: var(--placeholderColor);
}

:global .Select-menu-outer {
  border-bottom-right-radius: var(--borderRadius);
  border-bottom-left-radius: var(--borderRadius);
  border-bottom-color: var(--borderColor);
  border-left-color: var(--borderColor);
  border-right-color: var(--borderColor);
}

:global .Select-option {
  padding: calc(var(--spacingUnit) / 4) calc(var(--spacingUnit) / 2);
  background-color: var(--inputBgColor);
  color: inherit;
  font-size: 0.9em;
}

:global .Select-option.is-focused {
  color: inherit;
  background-color: rgba(0, 0, 0, 0.2);

  /* background-color: color(var(--inputBgColor) blackness(+5%)); */
}

:global .Select-option:last-child {
  border-bottom-right-radius: var(--borderRadius);
  border-bottom-left-radius: var(--borderRadius);
}

:global .Select-clear-zone {
  display: none;
  padding-right: 3px;
  padding-bottom: 3px;
}

:global .Select-arrow-zone {
  padding-top: 5px;
}
